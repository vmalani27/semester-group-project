import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
import numpy as np

from google.colab import files
uploaded = files.upload()


import io
data = pd.read_csv('labeled_emails (1).csv')
print(data)

df = pd.DataFrame(data)

# Replace NaN values in the content with an empty string
df['content'] = df['content'].fillna('')

# Split the data into training (with labels) and testing (NaN labels)
train_data = df[df['label'].notna()]
test_data = df[df['label'].isna()]

# Feature extraction using TF-IDF
vectorizer = TfidfVectorizer()
X_train = vectorizer.fit_transform(train_data['content'])
X_test = vectorizer.transform(test_data['content'])

# Train a logistic regression model
model = LogisticRegression()
model.fit(X_train, train_data['label'])

# Predict labels for the test data (NaN labels)
predicted_labels = model.predict(X_test)
test_data.loc[:, 'label'] = predicted_labels

# Combine the training and test data back into a single DataFrame and sort by the original index
result = pd.concat([train_data, test_data]).sort_index()

# Save the result to a CSV file
result.to_csv('email_classification_result.csv', index=False)

# Download the file
files.download('email_classification_result.csv')

print("Prediction completed and saved to 'email_classification_result.csv'.")